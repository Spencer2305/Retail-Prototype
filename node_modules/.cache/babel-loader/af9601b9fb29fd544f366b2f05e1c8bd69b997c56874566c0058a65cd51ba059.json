{"ast":null,"code":"import React,{useState}from'react';import{MessageCircle,User,Bot,Clock,Package,Search}from'lucide-react';import{mockChatConversations}from'../data/mockData';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ChatBot=()=>{const[selectedConversation,setSelectedConversation]=useState(mockChatConversations[0]);const[searchTerm,setSearchTerm]=useState('');const filteredConversations=mockChatConversations.filter(conv=>conv.customerName.toLowerCase().includes(searchTerm.toLowerCase())||conv.customerEmail.toLowerCase().includes(searchTerm.toLowerCase())||conv.messages.some(msg=>{var _msg$orderNumber,_msg$productId;return msg.message.toLowerCase().includes(searchTerm.toLowerCase())||((_msg$orderNumber=msg.orderNumber)===null||_msg$orderNumber===void 0?void 0:_msg$orderNumber.toLowerCase().includes(searchTerm.toLowerCase()))||((_msg$productId=msg.productId)===null||_msg$productId===void 0?void 0:_msg$productId.toLowerCase().includes(searchTerm.toLowerCase()));}));const getStatusColor=status=>{switch(status){case'active':return'bg-green-100 text-green-800';case'resolved':return'bg-blue-100 text-blue-800';case'pending':return'bg-yellow-100 text-yellow-800';default:return'bg-gray-100 text-gray-800';}};const formatTime=date=>{return new Intl.DateTimeFormat('en-GB',{hour:'2-digit',minute:'2-digit',day:'2-digit',month:'short'}).format(date);};const extractOrderInfo=message=>{if(message.orderNumber){return/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 p-2 bg-blue-50 rounded-lg border border-blue-200\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-sm text-blue-700\",children:[/*#__PURE__*/_jsx(Package,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium\",children:[\"Order: \",message.orderNumber]})]})});}return null;};const extractProductInfo=message=>{if(message.productId){return/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 p-2 bg-purple-50 rounded-lg border border-purple-200\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-sm text-purple-700\",children:[/*#__PURE__*/_jsx(Package,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium\",children:[\"Product SKU: \",message.productId]})]})});}return null;};return/*#__PURE__*/_jsxs(\"div\",{className:\"h-full flex bg-white rounded-lg shadow-sm border border-gray-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/3 border-r border-gray-200 flex flex-col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-gray-900 mb-3\",children:\"Chat Conversations\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(Search,{className:\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search conversations...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto\",children:filteredConversations.map(conversation=>{var _conversation$message;return/*#__PURE__*/_jsxs(\"div\",{onClick:()=>setSelectedConversation(conversation),className:\"p-4 border-b border-gray-100 cursor-pointer hover:bg-gray-50 transition-colors \".concat((selectedConversation===null||selectedConversation===void 0?void 0:selectedConversation.id)===conversation.id?'bg-primary-50 border-primary-200':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-gray-900\",children:conversation.customerName}),/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded-full text-xs font-medium \".concat(getStatusColor(conversation.status)),children:conversation.status})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:conversation.customerEmail}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(Clock,{className:\"w-3 h-3\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Last activity: \",formatTime(conversation.lastActivity)]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-700 mt-2 line-clamp-2\",children:(_conversation$message=conversation.messages[conversation.messages.length-1])===null||_conversation$message===void 0?void 0:_conversation$message.message})]},conversation.id);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex flex-col\",children:selectedConversation?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-b border-gray-200 bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-gray-900\",children:selectedConversation.customerName}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:selectedConversation.customerEmail})]}),/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 rounded-full text-sm font-medium \".concat(getStatusColor(selectedConversation.status)),children:selectedConversation.status})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-4 space-y-4\",children:selectedConversation.messages.map(message=>/*#__PURE__*/_jsx(\"div\",{className:\"flex \".concat(message.sender==='user'?'justify-end':'justify-start'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-xs lg:max-w-md \".concat(message.sender==='user'?'order-2':'order-1'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-1\",children:[message.sender==='user'?/*#__PURE__*/_jsx(User,{className:\"w-4 h-4 text-gray-600\"}):/*#__PURE__*/_jsx(Bot,{className:\"w-4 h-4 text-primary-600\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500\",children:message.sender==='user'?'Customer':'Support Bot'}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-400\",children:formatTime(message.timestamp)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 rounded-lg \".concat(message.sender==='user'?'bg-primary-600 text-white':'bg-gray-100 text-gray-900'),children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:message.message}),extractOrderInfo(message),extractProductInfo(message)]})]})},message.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-t border-gray-200 bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-sm text-gray-600\",children:[/*#__PURE__*/_jsx(MessageCircle,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Conversation started: \",formatTime(selectedConversation.createdAt)]})]})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex items-center justify-center text-gray-500\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(MessageCircle,{className:\"w-12 h-12 mx-auto mb-4 text-gray-300\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Select a conversation to view messages\"})]})})})]});};export default ChatBot;","map":{"version":3,"names":["React","useState","MessageCircle","User","Bot","Clock","Package","Search","mockChatConversations","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatBot","selectedConversation","setSelectedConversation","searchTerm","setSearchTerm","filteredConversations","filter","conv","customerName","toLowerCase","includes","customerEmail","messages","some","msg","_msg$orderNumber","_msg$productId","message","orderNumber","productId","getStatusColor","status","formatTime","date","Intl","DateTimeFormat","hour","minute","day","month","format","extractOrderInfo","className","children","extractProductInfo","type","placeholder","value","onChange","e","target","map","conversation","_conversation$message","onClick","concat","id","lastActivity","length","sender","timestamp","createdAt"],"sources":["/Users/spencersnow/Desktop/EX Development/Retail prototype for website/src/components/ChatBot.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { MessageCircle, User, Bot, Clock, Package, Search } from 'lucide-react';\nimport { ChatConversation, ChatMessage } from '../types';\nimport { mockChatConversations } from '../data/mockData';\n\nconst ChatBot: React.FC = () => {\n  const [selectedConversation, setSelectedConversation] = useState<ChatConversation | null>(\n    mockChatConversations[0]\n  );\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const filteredConversations = mockChatConversations.filter(\n    conv =>\n      conv.customerName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      conv.customerEmail.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      conv.messages.some(msg => \n        msg.message.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        msg.orderNumber?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        msg.productId?.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n  );\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-800';\n      case 'resolved': return 'bg-blue-100 text-blue-800';\n      case 'pending': return 'bg-yellow-100 text-yellow-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatTime = (date: Date) => {\n    return new Intl.DateTimeFormat('en-GB', {\n      hour: '2-digit',\n      minute: '2-digit',\n      day: '2-digit',\n      month: 'short'\n    }).format(date);\n  };\n\n  const extractOrderInfo = (message: ChatMessage) => {\n    if (message.orderNumber) {\n      return (\n        <div className=\"mt-2 p-2 bg-blue-50 rounded-lg border border-blue-200\">\n          <div className=\"flex items-center gap-2 text-sm text-blue-700\">\n            <Package className=\"w-4 h-4\" />\n            <span className=\"font-medium\">Order: {message.orderNumber}</span>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const extractProductInfo = (message: ChatMessage) => {\n    if (message.productId) {\n      return (\n        <div className=\"mt-2 p-2 bg-purple-50 rounded-lg border border-purple-200\">\n          <div className=\"flex items-center gap-2 text-sm text-purple-700\">\n            <Package className=\"w-4 h-4\" />\n            <span className=\"font-medium\">Product SKU: {message.productId}</span>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"h-full flex bg-white rounded-lg shadow-sm border border-gray-200\">\n      {/* Conversations List */}\n      <div className=\"w-1/3 border-r border-gray-200 flex flex-col\">\n        <div className=\"p-4 border-b border-gray-200\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-3\">Chat Conversations</h2>\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search conversations...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"flex-1 overflow-y-auto\">\n          {filteredConversations.map((conversation) => (\n            <div\n              key={conversation.id}\n              onClick={() => setSelectedConversation(conversation)}\n              className={`p-4 border-b border-gray-100 cursor-pointer hover:bg-gray-50 transition-colors ${\n                selectedConversation?.id === conversation.id ? 'bg-primary-50 border-primary-200' : ''\n              }`}\n            >\n              <div className=\"flex items-start justify-between mb-2\">\n                <h3 className=\"font-medium text-gray-900\">{conversation.customerName}</h3>\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(conversation.status)}`}>\n                  {conversation.status}\n                </span>\n              </div>\n              <p className=\"text-sm text-gray-600 mb-2\">{conversation.customerEmail}</p>\n              <div className=\"flex items-center gap-2 text-xs text-gray-500\">\n                <Clock className=\"w-3 h-3\" />\n                <span>Last activity: {formatTime(conversation.lastActivity)}</span>\n              </div>\n              <p className=\"text-sm text-gray-700 mt-2 line-clamp-2\">\n                {conversation.messages[conversation.messages.length - 1]?.message}\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Chat Messages */}\n      <div className=\"flex-1 flex flex-col\">\n        {selectedConversation ? (\n          <>\n            <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h3 className=\"font-semibold text-gray-900\">{selectedConversation.customerName}</h3>\n                  <p className=\"text-sm text-gray-600\">{selectedConversation.customerEmail}</p>\n                </div>\n                <span className={`px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(selectedConversation.status)}`}>\n                  {selectedConversation.status}\n                </span>\n              </div>\n            </div>\n\n            <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n              {selectedConversation.messages.map((message) => (\n                <div\n                  key={message.id}\n                  className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n                >\n                  <div className={`max-w-xs lg:max-w-md ${message.sender === 'user' ? 'order-2' : 'order-1'}`}>\n                    <div className=\"flex items-center gap-2 mb-1\">\n                      {message.sender === 'user' ? (\n                        <User className=\"w-4 h-4 text-gray-600\" />\n                      ) : (\n                        <Bot className=\"w-4 h-4 text-primary-600\" />\n                      )}\n                      <span className=\"text-xs text-gray-500\">\n                        {message.sender === 'user' ? 'Customer' : 'Support Bot'}\n                      </span>\n                      <span className=\"text-xs text-gray-400\">\n                        {formatTime(message.timestamp)}\n                      </span>\n                    </div>\n                    <div\n                      className={`p-3 rounded-lg ${\n                        message.sender === 'user'\n                          ? 'bg-primary-600 text-white'\n                          : 'bg-gray-100 text-gray-900'\n                      }`}\n                    >\n                      <p className=\"text-sm\">{message.message}</p>\n                      {extractOrderInfo(message)}\n                      {extractProductInfo(message)}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"p-4 border-t border-gray-200 bg-gray-50\">\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <MessageCircle className=\"w-4 h-4\" />\n                <span>Conversation started: {formatTime(selectedConversation.createdAt)}</span>\n              </div>\n            </div>\n          </>\n        ) : (\n          <div className=\"flex-1 flex items-center justify-center text-gray-500\">\n            <div className=\"text-center\">\n              <MessageCircle className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n              <p>Select a conversation to view messages</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}